__NUXT_JSONP__("/testing/fake", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V){return {data:[{document:{slug:t,description:"",title:"Fake Telegram interaction",menuTitle:"Fake",category:"Testing",fullscreen:false,position:100,toc:[{id:C,depth:D,text:E},{id:F,depth:D,text:G}],body:{type:"root",children:[{type:b,tag:v,props:{},children:[{type:a,value:"In order to avoid sending real messages to Telegram when testing, the "},{type:b,tag:p,props:{},children:[{type:a,value:f}]},{type:a,value:" facade offers a "},{type:b,tag:p,props:{},children:[{type:a,value:H}]},{type:a,value:" method to start registering sent messages internally instead of sending them to Telegram APIs."}]},{type:a,value:g},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:p,props:{},children:[{type:b,tag:c,props:{className:[d,"keyword"]},children:[{type:a,value:"use"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,"package"]},children:[{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:"Facades"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:f}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s,"double-quoted-string"]},children:[{type:a,value:"\"Hello devs!\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"\u002F\u002F the message won be actually sent to telegram, but can still be asserted"}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"assertSent"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s,u]},children:[{type:a,value:"'Hello devs!'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:C},children:[{type:b,tag:N,props:{ariaHidden:O,href:"#custom-responses",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:E}]},{type:a,value:g},{type:b,tag:v,props:{},children:[{type:a,value:"If needed for testing purpose, the "},{type:b,tag:p,props:{},children:[{type:a,value:H}]},{type:a,value:" helper can accept an array of responses to be returned for each endpoint call:"}]},{type:a,value:g},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:p,props:{},children:[{type:a,value:l},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:"\n   "},{type:b,tag:c,props:{className:[d,"class-name","class-name-fully-qualified","static-context"]},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:f}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,"constant"]},children:[{type:a,value:"ENDPOINT_MESSAGE"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:T}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,s,u]},children:[{type:a,value:"'result'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:T}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,s,u]},children:[{type:a,value:"'oooook'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:","}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,"variable"]},children:[{type:a,value:"$response"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:"="}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:J}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,s,u]},children:[{type:a,value:"'foo'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:K}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:L}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"\u002F\u002F$response will be a Response containing a json body: {\"result\":\"oooook\"}"}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:M,props:{id:F},children:[{type:b,tag:N,props:{ariaHidden:O,href:"#sent-data-dump",tabIndex:P},children:[{type:b,tag:c,props:{className:[Q,R]},children:[]}]},{type:a,value:G}]},{type:a,value:g},{type:b,tag:v,props:{},children:[{type:a,value:"For debugging purpose, a dump of the sent data can be obtained with:"}]},{type:a,value:g},{type:b,tag:w,props:{className:[x]},children:[{type:b,tag:y,props:{className:[z,A]},children:[{type:b,tag:p,props:{},children:[{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"\u002F\u002F Telegraph requests..."}]},{type:a,value:h},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"dumpSentData"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g}]}]}]}]},dir:"\u002Fen\u002Ftesting",path:"\u002Fen\u002Ftesting\u002Ffake",extension:".md",createdAt:V,updatedAt:V,to:"\u002Ftesting\u002Ffake"},prev:{title:"Telegraph Entities Storage",path:"\u002Fen\u002Fstorage\u002Fentities_storage",to:"\u002Fstorage\u002Fentities_storage"},next:{title:"Fake messages assertions",path:"\u002Fen\u002Ftesting\u002Fassertions",to:"\u002Ftesting\u002Fassertions"}}],fetch:{},mutations:[]}}("text","element","span","token","punctuation","Telegraph","\n","\n\n","function","(",")"," ",";","::","scope","code","\\","operator","string","fake","single-quoted-string","p","div","nuxt-content-highlight","pre","language-php","line-numbers","comment","custom-responses",3,"Custom responses","sent-data-dump","Sent data dump","::fake()","DefStudio","message","-\u003E","send","h3","a","true",-1,"icon","icon-link","[","=\u003E","]","2024-01-07T14:45:01.566Z")));